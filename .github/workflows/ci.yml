name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


env:
  SHORT_SHA: ${{ github.sha }}
  IMAGE_BACKEND: ghcr.io/${{ secrets.GH_USERNAME }}/devbook-backend
  IMAGE_FRONTEND: ghcr.io/${{ secrets.GH_USERNAME }}/devbook-frontend
  IMAGE_POSTGRES: ghcr.io/${{ secrets.GH_USERNAME }}/devbook-postgres
  

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          paths: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven
        run: mvn clean package --file pom.xml --no-transfer-progress

      - name: Log in to Github Container Registry
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u ${{ secrets.GH_USERNAME }} --password-stdin

      - name: Build and push backend image (Backend)
        run: |
          docker build -t $IMAGE_BACKEND:latest -t $IMAGE_BACKEND:${SHORT_SHA} .
          docker push $IMAGE_BACKEND:latest
          docker push $IMAGE_BACKEND:${SHORT_SHA}

  
  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    defaults:
      run:
        working-directory: frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          paths: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: install dependencies
        run: npm install

    
      - name: Build React app
        run: npm run build

      - name: Log in to Github Container Registry
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u ${{ secrets.GH_USERNAME }} --password-stdin

      - name: Build and push frontend image (Frontend)
        run: |
          docker build -t $IMAGE_FRONTEND:latest -it $IMAGE_FRONTEND:${SHORT_SHA} .
          docker push $IMAGE_FRONTEND:latest
          docker push $IMAGE_FRONTEND:${SHORT_SHA}